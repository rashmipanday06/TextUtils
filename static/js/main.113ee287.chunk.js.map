{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","Alert","height","alert","role","msg","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.113ee287.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button cla\r\n                        ssName=\"btn btn-primary\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };","import React, {useState} from 'react'\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n        let newText =  text.toUpperCase();\r\n      setText(newText)\r\n      props.showAlert(\"UpperCase\",\"Success\");\r\n    }\r\n    const handleExtraSpsaces = ()=>{\r\n      // console.log(\"Uppercase was clicked\" + text);\r\n      let newText =  text.split(/[ ]+/);\r\n      setText(newText.join(\" \"))\r\n  }\r\n    const handleClearClick = ()=>{\r\n      // console.log(\"Uppercase was clicked\" + text);\r\n      let newText = ''\r\n      setText(newText)\r\n  }\r\n    const handleLoClick = ()=>{\r\n      // console.log(\"Lowercase was clicked\" + text);\r\n      let newText =  text.toLowerCase();\r\n      setText(newText)\r\n  }\r\n  const handleCopy = ()=>{\r\n    navigator.clipboard.writeText(text);\r\n    // var text = document.getElementById(\"mybox\");\r\n    // text.select();\r\n    // navigator.clipboard.writeText(text.value);\r\n}\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"on change\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text,setText] = useState('');\r\n    return (\r\n\r\n<>\r\n<div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n  <h3 className='mb-2'>{props.heading}</h3>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"mybox\" rows=\"8\"></textarea>\r\n  </div>\r\n<button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Uppercase</button>\r\n<button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleLoClick}>lowercase</button>\r\n<button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleClearClick}>clear text</button>\r\n<button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleCopy}>copy text</button>\r\n<button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={handleExtraSpsaces}> remove extraSpaces</button>\r\n\r\n</div>\r\n<div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 *  text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n        </div>\r\n</>\r\n   \r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    \r\n  return (\r\n    <div style={{height:'50px'}}>\r\n     { props.alert && <div className={`alert alert-primary ${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  {props.alert.msg}:{props.alert.type}\r\n      </div>}\r\n      </div>\r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    \n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n  const toggleMode = ()=>{\n    if(mode ==='light' ){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"dark mode is enabled\");\n  }\n  else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode is enabled\");\n\n  }\n  }\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"continer my-3\">   \n          <TextForm showAlert={showAlert} heading=\"Try TextUtils- Word Counter, Character Counter, Remove Extra Spaces\" mode={mode}  />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}